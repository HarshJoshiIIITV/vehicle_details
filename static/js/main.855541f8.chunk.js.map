{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","onsubmit","e","state","reg_no","length","reg","console","log","reg2","slice","reg1","axios","get","then","resp","setState","response","data","catch","error","onchange","target","name","value","className","style","padding","display","type","onChange","this","onClick","Object","keys","owner_name","insurance_upto","maker___model","indexOf","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQA4DeA,G,wDAvDb,aAAe,IAAD,8BACZ,gBAMFC,SAAW,SAACC,GACV,GAAI,EAAKC,MAAMC,OAAOC,OAAS,EAAG,CAChC,IAAMC,EAAM,EAAKH,MAAMC,OACvBG,QAAQC,IAAIF,GACZ,IAAMG,EAAOH,EAAII,OAAO,GAClBC,EAAOL,EAAII,MAAM,EAAGJ,EAAID,OAAS,GACvCO,IAAMC,IAAN,2FAA8FF,EAA9F,iBAA2GF,IACxGK,MAAK,SAACC,GACL,EAAKC,SAAS,CACZC,SAAUF,EAAKG,OAEjBX,QAAQC,IAAI,EAAKL,MAAMc,aAExBE,OAAM,SAACC,GACNb,QAAQC,IAAIY,QArBN,EAyBdC,SAAW,SAACnB,GACV,EAAKc,SAAL,eACGd,EAAEoB,OAAOC,KAAOrB,EAAEoB,OAAOE,SAzB5B,EAAKrB,MAAQ,CACXc,SAAU,KACVb,OAAQ,MAJE,E,qDAiCZ,OACE,sBAAKqB,UAAU,MAAf,UACE,2DACA,sBAAKC,MAAO,CAAEC,QAAS,YAAvB,UACE,oBAAID,MAAO,CAAEE,QAAS,UAAtB,gDACA,uBAAOC,KAAK,OAAON,KAAK,SAASO,SAAUC,KAAKV,cAElD,wBAAQI,UAAU,SAASO,QAASD,KAAK9B,SAAzC,0BACwB,MAAvB8B,KAAK5B,MAAMc,UAAoBgB,OAAOC,KAAKH,KAAK5B,MAAMc,UAAUZ,OAAS,EACxE,sBAAKoB,UAAU,SAAf,UACE,8DACA,8BAAG,0CAAoBM,KAAK5B,MAAMc,SAASkB,cAC3C,8BAAG,oDAA8BJ,KAAK5B,MAAMc,SAASmB,kBACrD,8BAAG,0CAAoBL,KAAK5B,MAAMc,SAASoB,cAAc3B,MAAM,EAAGqB,KAAK5B,MAAMc,SAASoB,cAAcC,QAAQ,SAC5G,8BAAG,2CAAqBP,KAAK5B,MAAMc,SAASoB,cAAc3B,MAAMqB,KAAK5B,MAAMc,SAASoB,cAAcC,QAAQ,KAAO,SAEjH,Y,GAlDMC,cCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.855541f8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css'\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      response: null,\n      reg_no: null\n    }\n  }\n  onsubmit = (e) => {\n    if (this.state.reg_no.length > 0) {\n      const reg = this.state.reg_no;\n      console.log(reg);\n      const reg2 = reg.slice(-4);\n      const reg1 = reg.slice(0, reg.length - 4);\n      axios.get(`https://cors-anywhere.herokuapp.com/http://18.212.242.209/getVehicleDetails?reg1=${reg1}&reg2=${reg2}`)\n        .then((resp) => {\n          this.setState({\n            response: resp.data\n          })\n          console.log(this.state.response)\n        })\n        .catch((error) => {\n          console.log(error);\n        })\n    }\n  }\n  onchange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <h1>Find Your Vehicle Details</h1>\n        <div style={{ padding: '15px 5px' }}>\n          <h4 style={{ display: 'inline' }}>Enter vehicle registration number </h4>\n          <input type=\"text\" name=\"reg_no\" onChange={this.onchange} />\n        </div>\n        <button className=\"button\" onClick={this.onsubmit} >Find Details</button>\n        {this.state.response != null && Object.keys(this.state.response).length > 0 ?\n          <div className=\"output\">\n            <h2>Vehicle Registration Details</h2>\n            <p><span>Name: </span>{this.state.response.owner_name}</p>\n            <p><span>Insurance upto: </span>{this.state.response.insurance_upto}</p>\n            <p><span>Make: </span>{this.state.response.maker___model.slice(0, this.state.response.maker___model.indexOf(\"/\"))}</p>\n            <p><span>Model: </span>{this.state.response.maker___model.slice(this.state.response.maker___model.indexOf(\"/\") + 1)}</p>\n          </div>\n          : null}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}